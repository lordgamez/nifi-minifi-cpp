name: "MiNiFi-CPP CI"
on: [push, pull_request, workflow_dispatch]
env:
  DOCKER_CMAKE_FLAGS: -DDOCKER_VERIFY_THREAD=3 -DUSE_SHARED_LIBS= -DSTRICT_GSL_CHECKS=AUDIT -DCI_BUILD=ON -DDISABLE_JEMALLOC=ON -DENABLE_AWS=ON -DENABLE_LIBRDKAFKA=ON -DENABLE_MQTT=ON -DENABLE_AZURE=ON -DENABLE_SQL=ON \
    -DENABLE_SPLUNK=ON -DENABLE_GCP=ON -DENABLE_OPC=ON -DENABLE_PYTHON_SCRIPTING=ON -DENABLE_LUA_SCRIPTING=ON -DENABLE_KUBERNETES=ON -DENABLE_TEST_PROCESSORS=ON -DENABLE_PROMETHEUS=ON \
    -DENABLE_ELASTICSEARCH=OFF -DDOCKER_BUILD_ONLY=ON
  SCCACHE_GHA_ENABLE: true
  CCACHE_DIR: ${{ GITHUB.WORKSPACE }}/.ccache
jobs:
  windows_VS2022:
    name: "windows-2022"
    runs-on: windows-2022
    timeout-minutes: 240
    steps:
      - name: Support longpaths
        run: git config --system core.longpaths true
      - id: checkout
        uses: actions/checkout@v3
      - name: sccache cache restore
        uses: actions/cache/restore@v3
        with:
          path: ~/AppData/Local/Mozilla/sccache/cache
          key: ${{ runner.os }}-2022-sccache-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-2022-sccache-${{ github.ref }}
            ${{ runner.os }}-2022-sccache-refs/heads/main
            ${{ runner.os }}-2022-sccache
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.3
      - name: Install ninja-build tool
        uses: seanmiddleditch/gha-setup-ninja@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Set up Lua
        uses: xpol/setup-lua@v0.3
      - name: Set up NASM for OpenSSL
        uses: ilammy/setup-nasm@v1
      - id: install-sqliteodbc-driver
        run: |
          Invoke-WebRequest -Uri "http://www.ch-werner.de/sqliteodbc/sqliteodbc_w64.exe" -OutFile "sqliteodbc_w64.exe"
          if ((Get-FileHash 'sqliteodbc_w64.exe').Hash -ne "a4804e4f54f42c721df1323c5fcac101a8c7a577e7f20979227324ceab572d51") {Write "Hash mismatch"; Exit 1}
          Start-Process -FilePath ".\sqliteodbc_w64.exe" -ArgumentList "/S" -Wait
        shell: powershell
      - id: remove-strawberry-perl-tool-executables
        run: |
          # Remove conflicting Strawberry Perl executables like patch.exe and cmcldeps.exe (More information in the note under System Requirements in README.md)
          Remove-Item -Path "C:\Strawberry\c\bin" -Recurse -Force
        shell: pwsh
      - name: build
        run: |
          for /f "usebackq delims=" %%i in (`vswhere.exe -latest -property installationPath`) do if exist "%%i\Common7\Tools\vsdevcmd.bat" call "%%i\Common7\Tools\vsdevcmd.bat" -arch=x64 -host_arch=x64
          win_build_vs.bat ..\b /64 /CI /S /A /PDH /SPLUNK /GCP /ELASTIC /K /L /R /Z /N /RO /PR /PYTHON_SCRIPTING /LUA_SCRIPTING /MQTT /SCCACHE /NINJA /DD
          sccache --show-stats
        shell: cmd
      - name: sccache cache save
        uses: actions/cache/save@v3
        if: always()
        with:
          path: ~/AppData/Local/Mozilla/sccache/cache
          key: ${{ runner.os }}-2022-sccache-${{ github.ref }}-${{ github.sha }}
      - name: test
        run: cd ..\b && ctest --timeout 300 --parallel %NUMBER_OF_PROCESSORS% -C Release --output-on-failure
        shell: cmd
      - name: linter
        run: cd ..\b && cmake --build . --target linter --config Release -j 8
        shell: cmd
