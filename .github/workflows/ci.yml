name: "MiNiFi-CPP CI"
on: [push, pull_request, workflow_dispatch]
env:
  DOCKER_CMAKE_FLAGS: -DDOCKER_VERIFY_THREAD=3 -DUSE_SHARED_LIBS= -DSTRICT_GSL_CHECKS=AUDIT -DCI_BUILD=ON -DENABLE_AWS=ON -DENABLE_LIBRDKAFKA=ON -DENABLE_MQTT=ON -DENABLE_AZURE=ON -DENABLE_SQL=ON \
    -DENABLE_SPLUNK=ON -DENABLE_GCP=ON -DENABLE_OPC=ON -DENABLE_PYTHON_SCRIPTING=ON -DENABLE_LUA_SCRIPTING=ON -DENABLE_KUBERNETES=ON -DENABLE_TEST_PROCESSORS=ON -DENABLE_PROMETHEUS=ON \
    -DENABLE_ELASTICSEARCH=ON -DENABLE_GRAFANA_LOKI=ON -DDOCKER_BUILD_ONLY=ON
  SCCACHE_GHA_ENABLE: true
  CCACHE_DIR: ${{ GITHUB.WORKSPACE }}/.ccache
jobs:
  macos_xcode:
    name: "macos-xcode"
    runs-on: macos-14
    timeout-minutes: 180
    env:
      MACOS_MINIFI_OPTIONS: >-
        -DCMAKE_BUILD_TYPE=Release
        -DCI_BUILD=ON
        -DCUSTOM_MALLOC=OFF
        -DDOCKER_BUILD_ONLY=OFF
        -DDOCKER_PUSH=OFF
        -DDOCKER_SKIP_TESTS=ON
        -DENABLE_ALL=OFF
        -DENABLE_AWS=OFF
        -DENABLE_AZURE=OFF
        -DENABLE_BUSTACHE=OFF
        -DENABLE_BZIP2=ON
        -DENABLE_CIVET=ON
        -DENABLE_CONTROLLER=OFF
        -DENABLE_ELASTICSEARCH=OFF
        -DENABLE_ENCRYPT_CONFIG=ON
        -DENABLE_EXPRESSION_LANGUAGE=ON
        -DENABLE_GCP=OFF
        -DENABLE_KUBERNETES=OFF
        -DENABLE_LIBARCHIVE=ON
        -DENABLE_LIBRDKAFKA=OFF
        -DENABLE_LUA_SCRIPTING=OFF
        -DENABLE_LZMA=ON
        -DENABLE_MQTT=OFF
        -DENABLE_OPC=OFF
        -DENABLE_OPENCV=OFF
        -DENABLE_OPS=ON
        -DENABLE_PROMETHEUS=OFF
        -DENABLE_PYTHON_SCRIPTING=OFF
        -DENABLE_ROCKSDB=ON
        -DENABLE_SFTP=OFF
        -DENABLE_SPLUNK=OFF
        -DENABLE_SQL=OFF
        -DENABLE_TEST_PROCESSORS=OFF
        -DFORCE_COLORED_OUTPUT=OFF
        -DLIBC_STATIC=OFF
        -DMINIFI_ADVANCED_ASAN_BUILD=OFF
        -DMINIFI_ADVANCED_CODE_COVERAGE=OFF
        -DMINIFI_FAIL_ON_WARNINGS=OFF
        -DMINIFI_USE_REAL_ODBC_TEST_DRIVER=OFF
        -DPORTABLE=ON
        -DSKIP_TESTS=ON
        -DUSE_SHARED_LIBS=ON
    steps:
      - id: checkout
        uses: actions/checkout@v4
      - name: cache restore
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.CCACHE_DIR }}
          key: macos-arm-xcode-ccache-${{github.ref}}-${{github.sha}}
          restore-keys: |
            macos-arm-xcode-ccache-${{github.ref}}-
            macos-arm-xcode-ccache-refs/heads/main-
      - id: install_dependencies
        run: |
          brew update
          brew install ossp-uuid bison flex ccache sqliteodbc automake autoconf ninja
      - id: setup_env
        name: setup enviroment
        run: |
          echo "PATH=/opt/homebrew/opt/ccache:/opt/homebrew/opt/ccache/bin:/opt/homebrew/opt/ccache/libexec:$PATH" >> $GITHUB_ENV
          echo "DYLD_LIBRARY_PATH=$(brew --prefix)/lib" >> $GITHUB_ENV
          echo -e "127.0.0.1\t$HOSTNAME" | sudo tee -a /etc/hosts > /dev/null
      - name: build
        run: |
          python -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python main.py --noninteractive --skip-compiler-install --cmake-options="-DCMAKE_C_FLAGS=${CPPFLAGS} ${CFLAGS} -DCMAKE_CXX_FLAGS=${CPPFLAGS} ${CXXFLAGS}" --minifi-options="${MACOS_MINIFI_OPTIONS}"
        working-directory: bootstrap
      - name: cache save
        uses: actions/cache/save@v4
        if: always()
        with:
          path: ${{ env.CCACHE_DIR }}
          key: macos-arm-xcode-ccache-${{github.ref}}-${{github.sha}}
      - name: test
        id: test
        run: |
          # Set core file size limit to unlimited
          ulimit -c unlimited
          ctest -j4 --output-on-failure --timeout 300
        working-directory: build
      - name: check-cores
        if: ${{ failure() && steps.test.conclusion == 'failure' }}
        run: |
          if [ "$(ls -A /cores)" ]; then echo "CORES_EXIST=true" >> $GITHUB_ENV; fi
      - uses: actions/upload-artifact@v4
        if: ${{ failure() && env.CORES_EXIST == 'true' }}
        with:
          name: macos-coredumps
          path: /cores
      - uses: actions/upload-artifact@v4
        if: ${{ failure() && env.CORES_EXIST == 'true' }}
        with:
          name: macos-binaries
          path: build/bin
