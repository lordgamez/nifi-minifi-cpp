diff --git a/cmake/external_dependencies.cmake b/cmake/external_dependencies.cmake
index fa39f56527..b58dfb8544 100644
--- a/cmake/external_dependencies.cmake
+++ b/cmake/external_dependencies.cmake
@@ -40,14 +40,14 @@ elseif(ENABLE_OPENSSL_ENCRYPTION)
     add_definitions(-DENABLE_OPENSSL_ENCRYPTION)
     message(STATUS "Encryption: LibCrypto")
 
-    set(CRYPTO_TARGET_NAME "AWS::crypto")
+    set(CRYPTO_TARGET_NAME "OpenSSL::Crypto")
     if(PLATFORM_ANDROID AND ANDROID_BUILD_OPENSSL)
         set(BUILD_OPENSSL 1)
         set(CRYPTO_TARGET_NAME "crypto")
         set(USE_OPENSSL ON)
         message(STATUS "  Building Openssl as part of AWS SDK")
     else()
-        find_package(crypto REQUIRED)
+        find_package(OpenSSL REQUIRED)
     endif()
     set(CRYPTO_LIBS ${CRYPTO_TARGET_NAME} ${ZLIB_LIBRARIES})
     # ssl depends on libcrypto
diff --git a/crt/aws-crt-cpp/crt/s2n/CMakeLists.txt b/crt/aws-crt-cpp/crt/s2n/CMakeLists.txt
index f5ee8379..8c817e25 100644
--- a/crt/aws-crt-cpp/crt/s2n/CMakeLists.txt
+++ b/crt/aws-crt-cpp/crt/s2n/CMakeLists.txt
@@ -380,9 +380,9 @@ if (TARGET crypto)
     message(STATUS "S2N found target: crypto")
     set(LINK_LIB "crypto")
 else()
-    find_package(crypto REQUIRED)
+    find_package(OpenSSL REQUIRED)
     message(STATUS "Using libcrypto from the cmake path")
-    set(LINK_LIB "AWS::crypto")
+    set(LINK_LIB "OpenSSL::Crypto")
 endif()
 
 if (S2N_INTERN_LIBCRYPTO)
